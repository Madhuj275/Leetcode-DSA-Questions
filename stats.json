{"leetcode":{"easy":1,"hard":0,"medium":2,"shas":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.py":"ab405c4fa4fcb29180896a0ebec8722752679e99","README.md":"8169bc76429370954eb33bb078940c0a05066e29"},"0226-invert-binary-tree":{"0226-invert-binary-tree.py":"60153bd68b217339aa6b86a83893ebd9d1ad7e0e","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"README.md":{"":"fd4b75292561c21c8a1a20613e5b3f2cb78c4ef3"},"2220-find-all-possible-recipes-from-given-supplies":{"2220-find-all-possible-recipes-from-given-supplies.py":"76817f5ef7d520e577ecb765e844d3dd1ad16a6a","README.md":"2a6be38db122481efe904ac8eff5d23597b936d5","difficulty":"medium"},"stats.json":{"":"bbb5aa804b0682e51b586faa19d5cef571521846"},"2793-count-the-number-of-complete-components":{"2793-count-the-number-of-complete-components.py":"693f202d87d9c92184ae9ca0400c9bd4f58fae36","README.md":"c90c5ad42723b42c8a4e3d7746f91b309379b4c5","difficulty":"medium"}},"solved":3}}